 ls -al | grep ssh
pour retrouver ssh

$ ls -al | grep ssh
pour retrouver ssh

Pur commit et push dans le git
git pull 
on fait des modifications
git add/ git rm
git commit
git push
git status pour quitter l'éditeur

less cat 2016*.ann | wc -l pour compter annotations
cat -E 2016*.ann | wc -l 

sort 2016*ann | less

egrep "Location" 2017*| cat>sortie.txt
egrep "Location" 2017*| wc>output1.txt pour les lieux 
cat 2017*>t1.txt pour trouver le nombre d'annotations par année


cat ne compte pas les sauts de ligne et sort les garde

ls -l 2016*.ann | wc -l
pour afficher les fichiers
| head pour le haut 

sort 2016*.ann | wc -l (juste mais lent)
grep "" 2016*.ann | wc -l (mieux)

time sort Fichiers/2016*.ann| wc -l (compte le temps)

grep -E "Locations" i d e m | wc -l

echo (comme le print) sert à afficher
echo "bonjour" > sortie.txt : écrit tjrs dans un fichier nouveau ou écrase le contenu
echo "bonsoir2" >> sortie.txt: il y a bien deux lignes dans le fichier. 

cat -E  sortie.txt (pour afficher les caractères non imprimables).

file sortie.txt (pour savoir encodage du fichier)
echo "bonjour2" > sortie2.txt
file sortie2.txt (pas UTF-8 mais ASCII) 

bash script.sh pour script bash


grep "Locations" 2018*.ann | wc-l >> sortie.txt

le dossier du travail n'est pas celui du script mais celui où je me trouve pour lancer le script. 
se déplacer dans un programme: incidence sur le fichier de sortie.

#!/usr/bin/bash
cd/home/pierre/Cours/M1/PPE1/Fichiers
echo "où suis-je?"
pwd 
#traitement de l'année 2016, on crée, on écrase le fichier sortie.txt
echo"pour l'année 2016" > sortie.txt
grep "Locations" 2016*.ann | wc -l >>sortie.txt
idem pour 2017 et 2018

$../mon_git/PPE1/avec_arguments.sh 2016 Location
$ cat sortie.txt
pour l'année 2016
3144
idem pour les autres années

#!/usr/bin/bash

ANNEE=2016 
TYPE="Location"

echo"pour l'année 2016" > sortie.txt
grep "Location" 2016*.ann | wc -l >> sortie.txt 

echo "pour l'année $ANNEE">sortie.txt
grep "$TYPE" $ANNEE*.ann | wc -l >> sortie.txt

$ echo "bonjour tout le monde"
bonjour tout le monde

$echo "bonjour tout le monde $NB_LIGNES"
bonjour tout le monde 10

$() valeur retournée par la commande
pour parcourir les fichiers
N=0
for ELEMENT in $(ls)

toujours avoir une ligne vide à la fin de son fichier

exercice bash
le contentu de fichier url est envoyé dans la boucle et lu lignes par lignes.
il faut bien traiter l'entrée.
<$ une entrée, le courant va à l'intérieur de la boucle 
le $ est une variable. 

$# wq pour voir ce que ça donne 
[$# -ne 1] différent de 1, n'est pas égal à 1.

test pour fichier non vide
if [-f $1]
-r ignore les fichiers dont l'échappement n'est pas encodé.


sudo apt install lynx, terminal web

option dump prend le premier argument et permet de l'afficher sur l'écran

lynx -dump -nolist "https://fr.wikipedia.org/wiki/Robot"
toute la liste des occurences de robot
redirection dans fichiers

option -i pour infos sur interaction avec le serveur.
content-type: text/html
meta content: text html UTF-8
commande -L pour suivre les redirections.
-I affiche les en-têtes.
-IL

